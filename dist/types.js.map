{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Represents the proxy object, which wraps a target object. As a result, it\n * allows for accessing and setting all of the properties that the target object\n * supports, but also supports an extra method to switch the target.\n *\n * @member setTarget - Allows for switching the target.\n * @template Type - The type of the object you want to wrap. It is assumed that\n * you will maintain this type even when swapping out the target.\n */\nexport type SwappableProxy<Type extends object> = Type & {\n  setTarget: (newTarget: Type) => void;\n};\n"]}